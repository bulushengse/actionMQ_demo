<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:amq="http://activemq.apache.org/schema/core"
    xmlns:jms="http://www.springframework.org/schema/jms"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/jms
        http://www.springframework.org/schema/jms/spring-jms-4.1.xsd
        http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core-5.12.1.xsd"
        >
   
	
   <!-- ActiveMQ 真正产生Connection的ConnectionFactory,由对应的 JMS服务厂商提供-->	
   <bean id="activeMqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">		
   		<property name="brokerURL" value="tcp://localhost:61616" />	
   		<property name="userName" value="admin"></property>
		<property name="password" value="admin"></property>
   </bean>

    <!--ActiveMQ 的ConnectionFactory交给spring 管理  -->
    <bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <constructor-arg ref="activeMqConnectionFactory" />
        <property name="sessionCacheSize" value="100" />
    </bean>
    

	<!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->	
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">		
		<property name="connectionFactory" ref="connectionFactory" />	
		<property name="defaultDestination" ref="queueDestination" />
		<!-- <property name="defaultDestination" ref="topicDestination" /> -->
		<property name="pubSubDomain" value="false" /><!-- true是topic，false是queue，默认是false。-->
        <property name="deliveryPersistent"> <!-- 持久化 -->
			<value>true</value>
		</property>
	</bean>

	<!-- 定义消息queue目的地，点对点的 -->	
	<bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">		
		<constructor-arg value="myQueue" />
	</bean>

	<!--定义消息topic目的地，一对多的 -->	
	<bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">		
		<constructor-arg value="myTopic" />
	</bean>
	
	<!-- 定义消费者，tomcat启动自动监听activemq中的消息-->
	<!-- 配置消息队列监听者（Queue） -->
     <bean id="queueMessageListener" class="com.zbc.spring.activemqListener.MQReceiverListenerQueue" /> 
     <bean id="topicMessageListener" class="com.zbc.spring.activemqListener.MQReceiverListenerTopic" /> 
    
    <!-- 配置消息监听容器，监听的目标是queueDestination -->
     <bean id="queueListenerContainer"  class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="destination" ref="queueDestination" />
        <property name="messageListener" ref="queueMessageListener" />
    </bean> 
    
    <!-- 配置消息监听容器，监听的目标是topicDestination -->
     <bean id="topicListenerContainer"  class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="destination" ref="topicDestination" />
        <property name="messageListener" ref="topicMessageListener" />
    </bean> 

    
 </beans>